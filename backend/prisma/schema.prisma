generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

/**
 * ---------- Enums ----------
 */
enum BookingStatus {
  pending
  accepted
  declined
  canceled
  completed
}

/**
 * ---------- Models ----------
 */

model User {
  id        String   @id @default(cuid())
  role      String
  name      String
  email     String   @unique
  phone     String?
  createdAt DateTime @default(now())

  Groomer Groomer?
}

model Groomer {
  id              String  @id @default(cuid())
  userId          String  @unique
  user            User    @relation(fields: [userId], references: [id])
  bio             String?
  serviceRadiusKm Int     @default(20)
  homeLat         Float
  homeLng         Float
  // prepare for Stripe Connect payouts later
  stripeAccountId String? @unique

  Services Service[]
}

model Service {
  id          String  @id @default(cuid())
  groomerId   String
  groomer     Groomer @relation(fields: [groomerId], references: [id])
  name        String
  description String?
  dogSize     String
  priceCents  Int
  durationMin Int
  active      Boolean @default(true)
}

model Booking {
  id                    String        @id @default(cuid())
  customerId            String
  groomerId             String
  serviceId             String
  startTs               DateTime
  endTs                 DateTime
  address               String
  lat                   Float
  lng                   Float
  priceCents            Int
  status                BookingStatus @default(pending)
  // make PI id unique so webhook can use `update({ where: { stripePaymentIntentId } })`
  stripePaymentIntentId String?       @unique
  createdAt             DateTime      @default(now())

  @@index([groomerId, startTs])
}
